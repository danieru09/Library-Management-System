package Admin;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

public class BorrowBook2 extends JFrame {

    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    private JTextField userIdField;
    private JTextField bookIdField;
    private Library library;  // Reference to the Library object

    // Constructor to initialize the GUI and library object
    public BorrowBook2(Library library) {
        this.library = library;

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 686, 427);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        setContentPane(contentPane);
        contentPane.setLayout(null);

        // Main panel for UI components
        JPanel panel = new JPanel();
        panel.setBounds(0, 0, 670, 388);
        contentPane.add(panel);
        panel.setLayout(null);
        
        JLabel lblReturn = new JLabel("RETURN");
        lblReturn.setFont(new Font("Yu Gothic UI Semibold", Font.BOLD, 30));
        lblReturn.setBounds(36, 176, 157, 25);
        panel.add(lblReturn);
        
        JLabel lblNewLabel_1 = new JLabel("&");
        lblNewLabel_1.setFont(new Font("Yu Gothic UI Semibold", Font.BOLD, 30));
        lblNewLabel_1.setBounds(36, 140, 157, 25);
        panel.add(lblNewLabel_1);
        
        JLabel lblBorrow = new JLabel("BORROW");
        lblBorrow.setFont(new Font("Yu Gothic UI Semibold", Font.BOLD, 30));
        lblBorrow.setBounds(36, 104, 157, 25);
        panel.add(lblBorrow);
        
        JLabel lblTo = new JLabel("TO");
        lblTo.setFont(new Font("Yu Gothic UI Semibold", Font.BOLD, 30));
        lblTo.setBounds(36, 68, 157, 25);
        panel.add(lblTo);
        
        JLabel lblNewLabel = new JLabel("WELCOME");
        lblNewLabel.setFont(new Font("Yu Gothic UI Semibold", Font.BOLD, 30));
        lblNewLabel.setBounds(36, 32, 157, 25);
        panel.add(lblNewLabel);

        // Panel for form fields
        JPanel panel_1 = new JPanel();
        panel_1.setBounds(500, 0, 170, 388);
        panel.add(panel_1);
        panel_1.setLayout(null);

        JPanel panel_2 = new JPanel();
        panel_2.setBounds(0, 0, 170, 34);
        panel_1.add(panel_2);
        panel_2.setLayout(null);

        JLabel lblBorrowReturn = new JLabel("Borrow & Return");
        lblBorrowReturn.setFont(new Font("Yu Gothic UI Light", Font.BOLD, 18));
        lblBorrowReturn.setBounds(10, 11, 150, 14);
        panel_2.add(lblBorrowReturn);

        JPanel panel_3 = new JPanel();
        panel_3.setBounds(0, 55, 170, 52);
        panel_1.add(panel_3);
        panel_3.setLayout(null);

        JLabel lblUserId = new JLabel("USER ID :");
        lblUserId.setFont(new Font("Yu Gothic UI Semibold", Font.BOLD, 16));
        lblUserId.setBounds(10, 0, 109, 14);
        panel_3.add(lblUserId);

        userIdField = new JTextField();
        userIdField.setBounds(10, 21, 135, 20);
        panel_3.add(userIdField);
        userIdField.setColumns(10);

        JPanel panel_3_1 = new JPanel();
        panel_3_1.setLayout(null);
        panel_3_1.setBounds(0, 121, 170, 52);
        panel_1.add(panel_3_1);

        JLabel lblBookId = new JLabel("BOOK ID :");
        lblBookId.setFont(new Font("Yu Gothic UI Semibold", Font.BOLD, 16));
        lblBookId.setBounds(10, 0, 109, 14);
        panel_3_1.add(lblBookId);

        bookIdField = new JTextField();
        bookIdField.setColumns(10);
        bookIdField.setBounds(10, 21, 135, 20);
        panel_3_1.add(bookIdField);

        // Panel for the Borrow Book button
        JPanel borrowPanel = new JPanel();
        borrowPanel.setBackground(new Color(0, 0, 160));
        borrowPanel.setBounds(10, 202, 150, 42);
        panel_1.add(borrowPanel);
        borrowPanel.setLayout(null);

        JButton borrowButton = new JButton("BORROW BOOK");
        borrowButton.setForeground(Color.WHITE);
        borrowButton.setFont(new Font("Yu Gothic UI Semibold", Font.BOLD, 11));
        borrowButton.setBackground(new Color(0, 0, 160));
        borrowButton.setBounds(10, 11, 130, 23);
        borrowPanel.add(borrowButton);

        // Panel for the Return Book button
        JPanel returnPanel = new JPanel();
        returnPanel.setBackground(new Color(160, 0, 0));
        returnPanel.setLayout(null);
        returnPanel.setBounds(10, 255, 150, 42);
        panel_1.add(returnPanel);

        JButton returnButton = new JButton("RETURN BOOK");
        returnButton.setForeground(Color.WHITE);
        returnButton.setBackground(new Color(160, 0, 0));
        returnButton.setFont(new Font("Yu Gothic UI Semibold", Font.BOLD, 11));
        returnButton.setBounds(10, 11, 130, 23);
        returnPanel.add(returnButton);
        
                JLabel lblTitle = new JLabel("SPHERE");
                lblTitle.setIcon(new ImageIcon("C:\\Users\\User\\Downloads\\LIBRO S1 (1).jpg"));
                lblTitle.setForeground(new Color(160, 0, 0));
                lblTitle.setFont(new Font("Yu Gothic UI Semibold", Font.BOLD, 36));
                lblTitle.setBounds(0, 0, 670, 388);
                panel.add(lblTitle);

        // Action listeners for buttons
        borrowButton.addActionListener(e -> {
            try {
                int userId = Integer.parseInt(userIdField.getText());
                int bookId = Integer.parseInt(bookIdField.getText());
                library.borrowBook(userId, bookId);
                // Update table with new data or message
                updateTable("Borrowed", userId, bookId);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Invalid User ID or Book ID", "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

        returnButton.addActionListener(e -> {
            try {
                int userId = Integer.parseInt(userIdField.getText());
                int bookId = Integer.parseInt(bookIdField.getText());
                library.returnBook(userId, bookId);
                // Update table with new data or message
                updateTable("Returned", userId, bookId);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Invalid User ID or Book ID", "Error", JOptionPane.ERROR_MESSAGE);
            }
        });
    }

    // Method to update the table with new borrow/return data
    private void updateTable(String action, int userId, int bookId) {
        model.addRow(new Object[] { userId, bookId });
        JOptionPane.showMessageDialog(this, "Book successfully " + action, "Success", JOptionPane.INFORMATION_MESSAGE);
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(() -> {
            try {
                Library library = new Library(); // Create a new library instance
                BorrowBook2 frame = new BorrowBook2(library); // Pass it to the frame
                frame.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}
